"""
Simple sample code running an and gate p-circuit
"""
import pbit
import numpy as np
import matplotlib.pyplot as plt

# build p-circuit
J = my_data = np.genfromtxt('Jquanta.txt', delimiter=',')
h = np.zeros(15)
Nt = 100000
myp = pbit.pcircuit(J, h)

# run p-circuit
m = myp.runFor(Nt, gpu=True)

# Find the quantum output using special Look matrix
Nr = 3  # number of replicas
Ns = 5  # number of qubits
Look = 2 ** np.flip(np.arange(0, Ns))
rhoP = np.zeros((2 ** Ns, 2 ** Ns))
Nm = myp.getSize()

for i in range(Nt):
    mm = np.reshape(m[i, :], (Nr, Ns))
    xi = np.dot(Look, np.transpose(mm[1, :]))
    xj = np.dot(Look, np.transpose(mm[Nr - 1, :]))
    # add a 1 to the corresponding entry
    for kk in range(Ns):
        rhoP[int(xi), int(xj)] = rhoP[int(xi), int(xj)] + 1

out = np.array(rhoP / np.sum(np.diag(rhoP)))

print(out)

histboltz = myp.getBoltzmann()

diff = pbit.errorMSE(np.ndarray.flatten(out), histboltz)
print(diff)
print('done')
